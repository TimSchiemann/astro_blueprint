@use "utils";

@use "./config";
@use "./typo";
@use "./links";
@use "./lists";
@use "./forms";
@use "./animations";

/* variables */
html {
	--timing: 200ms;
}

/* make sizing simpler */
*,
*::before,
*::after {
	box-sizing: border-box;
}

/* remove default spacing */
/* force styling of type through styling, rather than elements */
* {
	margin: 0;
	padding: 0;
	font: inherit;
}

/* dark mode user-agent-styles */
/* improve punctuation in supported browsers */
html {
	color-scheme: dark light;
	hanging-punctuation: first last;
}

/* responsive images/videos */
:is(img, picture, svg, video) {
	display: block;
	max-width: 100%;
}

ul,
ol {
	list-style: none;
}

/* remove smooth scrolling */
/* center elements in viewport */

@media (prefers-reduced-motion: no-preference) {
	:has(:target) {
		scroll-behavior: smooth;
		scroll-padding-top: 3rem;
	}
}

/* grid helper */

.content-grid {
	display: grid;
	grid-template-columns: [full-width-start] 5vw [breakout-start] 5vw [content-start] 1fr [content-end] 5vw [breakout-end] 5vw [full-width-end];
	& > :not(.breakout, .full-width) {
		grid-column: content;
	}
}

.content-grid {
	> .breakout {
		grid-column: breakout;
	}
	> .breakout-right {
		grid-column-end: breakout-end;
	}
	> .breakout-left {
		grid-column-start: breakout-start;
	}
	.full-width {
		grid-column: full-width;
	}
	> .full-width-right {
		grid-column-end: full-width-end;
	}
	> .full-width-left {
		grid-column-start: full-width-start;
	}
}

/* screenreader only */

.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}
